---
stages:
  - "lint"
  - "test"
  - name: "deploy-github"
    if: "tag IS present"
  - name: "deploy-pypi"
    if: "tag IS present"

language: "python"
services:
  - "docker"

env:
  matrix:
    - PYTHON_VER: "3.6"
      NAUTOBOT_VER: "1.1.6"
    - PYTHON_VER: "3.7"
      NAUTOBOT_VER: "1.2"
    - PYTHON_VER: "3.8"
      NAUTOBOT_VER: "1.2"
    - PYTHON_VER: "3.9"
      NAUTOBOT_VER: "1.3"

before_script:
  # To be added later
  # - pip install invoke poetry toml
  # - invoke build-image --nocache
  - "pip3 install poetry"
  - "poetry install"
  - "poetry run invoke start"
  - timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8000)" != "200" ]]; do echo "waiting for Nautobot"; sleep 5; done' || false # yamllint disable-line rule:quoted-strings

script:
  - "pytest -v"

jobs:
  include:
    - stage: "tests"
      script:
        - "INVOKE_LOCAL=true poetry run invoke tests"

    - stage: "deploy-github"
      before_script:
        - "pip install poetry"
      script:
        - "poetry version $TRAVIS_TAG"
        - "poetry build"
      deploy:
        provider: "releases"
        api_key: "$GITHUB_AUTH_TOKEN"
        file_glob: true
        file: "dist/*"
        skip_cleanup: true
        on: # yamllint disable-line rule:truthy
          all_branches: true

    - stage: "deploy-pypi"
      before_script:
        - "pip install poetry"
      script:
        - "poetry version $TRAVIS_TAG"
        - "poetry config pypi-token.pypi $PYPI_TOKEN"
        - "poetry publish --build"
