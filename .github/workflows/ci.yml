---
name: "CI"
on: # yamllint disable
  - "push"
  - "pull_request"

jobs:
  tests:
    runs-on: "ubuntu-20.04"
    strategy:
      fail-fast: true
      matrix:
        include:
          - python-version: "3.6"
            nautobot-version: "1.1.6"
          - python-version: "3.7"
            nautobot-version: "1.2"
          - python-version: "3.8"
            nautobot-version: "1.3"
          - python-version: "3.9"
            nautobot-version: "1.3"
    env:
      PYTHON_VER: "${{ matrix.python-version }}"
      NAUTOBOT_VER: "${{ matrix.nautobot-version }}"
      INVOKE_LOCAL: true
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Install CICD dependencies"
        run: "pip install -U pip && pip install poetry"
      - name: "Install project dependencies via Poetry"
        run: "poetry install"
      - name: "Start containers"
        run: "poetry run invoke start"
      - name: "Wait for Nautobot to become available."
        run: timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8000)" != "200" ]]; do echo "waiting for Nautobot"; sleep 5; done' || false
      - name: "Tests"
        run: "poetry run invoke tests"
  publish_pypi:
    name: "Push Package to PyPI"
    runs-on: "ubuntu-20.04"
    if: "startsWith(github.ref, 'refs/tags/v')"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: "Install Python Packages"
        run: "pip install poetry"
      - name: "Set env"
        run: "echo RELEASE_VERSION=${GITHUB_REF:10} >> $GITHUB_ENV"
      - name: "Run Poetry Version"
        run: "poetry version $RELEASE_VERSION"
      - name: "Run Poetry Build"
        run: "poetry build"
      - name: "Push to PyPI"
        uses: "pypa/gh-action-pypi-publish@release/v1"
        with:
          user: "__token__"
          password: "${{ secrets.PYPI_API_TOKEN }}"
    needs:
      - "tests"
